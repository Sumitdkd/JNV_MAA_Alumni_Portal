{"ast":null,"code":"var _jsxFileName = \"/Users/sumitdhaker/Desktop/JNV MAA/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n//import jwt_decode from 'jwt-decode';\nimport api from '../services/api';\nimport authService from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const fetchUser = async () => {\n    try {\n      const res = await authService.getMe();\n      setUser(res.data.data);\n      setIsAdmin(res.data.data.role === 'admin');\n    } catch (error) {\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const login = token => {\n    localStorage.setItem('token', token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    return fetchUser();\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAdmin(false);\n    delete api.defaults.headers.common['Authorization'];\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAdmin,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"+yys+DPY02I8FbGUdDeFCrMvy0U=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAdmin","setIsAdmin","loading","setLoading","fetchUser","res","getMe","data","role","error","logout","token","localStorage","getItem","defaults","headers","common","login","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sumitdhaker/Desktop/JNV MAA/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n//import jwt_decode from 'jwt-decode';\nimport api from '../services/api';\nimport authService from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const fetchUser = async () => {\n        try {\n            const res = await authService.getMe();\n            setUser(res.data.data);\n            setIsAdmin(res.data.data.role === 'admin');\n        } catch (error) {\n            logout();\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n            fetchUser();\n        } else {\n            setLoading(false);\n        }\n    }, []);\n\n    const login = (token) => {\n        localStorage.setItem('token', token);\n        api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        return fetchUser();\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setUser(null);\n        setIsAdmin(false);\n        delete api.defaults.headers.common['Authorization'];\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, isAdmin, login, logout, loading }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE;AACA,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMd,WAAW,CAACe,KAAK,CAAC,CAAC;MACrCP,OAAO,CAACM,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;MACtBN,UAAU,CAACI,GAAG,CAACE,IAAI,CAACA,IAAI,CAACC,IAAI,KAAK,OAAO,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,MAAM,CAAC,CAAC;IACZ,CAAC,SAAS;MACNP,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZ,MAAMsB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACPrB,GAAG,CAACwB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;MAChEP,SAAS,CAAC,CAAC;IACf,CAAC,MAAM;MACHD,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,KAAK,GAAIN,KAAK,IAAK;IACrBC,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;IACpCrB,GAAG,CAACwB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;IAChE,OAAOP,SAAS,CAAC,CAAC;EACtB,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACjBE,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCpB,OAAO,CAAC,IAAI,CAAC;IACbE,UAAU,CAAC,KAAK,CAAC;IACjB,OAAOX,GAAG,CAACwB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD,CAAC;EAED,oBACIvB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEE,OAAO;MAAEiB,KAAK;MAAEP,MAAM;MAAER;IAAQ,CAAE;IAAAN,QAAA,EAClEA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC5B,EAAA,CA5CWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA8CzB,eAAeD,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}