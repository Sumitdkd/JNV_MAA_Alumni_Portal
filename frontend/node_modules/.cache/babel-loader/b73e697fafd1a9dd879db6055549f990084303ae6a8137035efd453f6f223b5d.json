{"ast":null,"code":"var _jsxFileName = \"/Users/sumitdhaker/Desktop/JNV MAA/frontend/src/components/common/StyledText.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StyledText({\n  text\n}) {\n  if (!text) return null;\n\n  // This regex finds all occurrences of @[Some Name]\n  const mentionRegex = /@\\[([^\\]]+)\\]/g;\n  const parts = text.split(mentionRegex);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-on-surface mt-1 whitespace-pre-wrap\",\n    children: parts.map((part, index) => {\n      // Every odd-indexed part is a captured name from the regex\n      if (index % 2 === 1) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"text-blue-600 font-semibold\",\n          children: [\"@\", part]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      } else {\n        // Even-indexed parts are the normal text\n        return part;\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = StyledText;\nvar _c;\n$RefreshReg$(_c, \"StyledText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StyledText","text","mentionRegex","parts","split","className","children","map","part","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sumitdhaker/Desktop/JNV MAA/frontend/src/components/common/StyledText.js"],"sourcesContent":["import React from 'react';\nexport default function StyledText({ text }) {\n    if (!text) return null;\n\n    // This regex finds all occurrences of @[Some Name]\n    const mentionRegex = /@\\[([^\\]]+)\\]/g;\n    const parts = text.split(mentionRegex);\n\n    return (\n        <p className=\"text-on-surface mt-1 whitespace-pre-wrap\">\n            {parts.map((part, index) => {\n                // Every odd-indexed part is a captured name from the regex\n                if (index % 2 === 1) {\n                    return (\n                        <strong key={index} className=\"text-blue-600 font-semibold\">\n                            @{part}\n                        </strong>\n                    );\n                } else {\n                    // Even-indexed parts are the normal text\n                    return part;\n                }\n            })}\n        </p>\n    );\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACzC,IAAI,CAACA,IAAI,EAAE,OAAO,IAAI;;EAEtB;EACA,MAAMC,YAAY,GAAG,gBAAgB;EACrC,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAACF,YAAY,CAAC;EAEtC,oBACIH,OAAA;IAAGM,SAAS,EAAC,0CAA0C;IAAAC,QAAA,EAClDH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACxB;MACA,IAAIA,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;QACjB,oBACIV,OAAA;UAAoBM,SAAS,EAAC,6BAA6B;UAAAC,QAAA,GAAC,GACvD,EAACE,IAAI;QAAA,GADGC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC;MAEjB,CAAC,MAAM;QACH;QACA,OAAOL,IAAI;MACf;IACJ,CAAC;EAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACC,EAAA,GAxBuBd,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}